name: Docker Build and Push

on:
    workflow_run:
        workflows: ['Release']
        types:
            - completed
    push:
        branches:
            - release/**
            # - main
            - feature/**
            - dev
        tags:
            - 'v*'
    release:
        types:
            - published

permissions:
    packages: write

jobs:
    push:
        name: Push
        runs-on: ubuntu-latest
        steps:
            - name: Code checkout
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.workflow_run.head_branch || github.ref }}
                  fetch-depth: 1

            - name: Determine if latest tag
              id: tag_check
              if: startsWith(github.ref, 'refs/tags/')
              run: |
                  git fetch --tags
                  CURRENT_TAG=${GITHUB_REF#refs/tags/}
                  ALL_TAGS=$(git tag --list "v*" | sort -V)
                  LATEST_TAG=$(echo "$ALL_TAGS" | tail -n 1)

                  if [ "$CURRENT_TAG" == "$LATEST_TAG" ]; then
                    echo "is_latest=true" >> $GITHUB_OUTPUT
                  else
                    echo "is_latest=false" >> $GITHUB_OUTPUT
                  fi
                  echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT

            - name: Docker metadata
              id: docker_meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/pyrohost/pyrodactyl
                  flavor: |
                      latest=auto
                  tags: |
                      type=raw,value=main,enable=${{ github.ref == 'refs/heads/main' }}
                      type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
                      type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/heads/release/') }}
                      type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/heads/feature/') }}
                      type=raw,value=develop,enable=${{ github.ref == 'refs/heads/dev' }}
                      type=raw,value=latest,enable=${{ (github.event_name == 'release' && !github.event.release.prerelease) || (startsWith(github.ref, 'refs/tags/') && steps.tag_check.outputs.is_latest == 'true' }}
                      type=ref,event=tag
                      type=raw,value=${{ steps.tag_check.outputs.current_tag || github.event.workflow_run.head_branch || github.ref_name }}
                      type=raw,value=action-${{ github.run_number }}

            - name: Setup QEMU
              if: ${{ startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'release' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}
              uses: docker/setup-qemu-action@v3

            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v3
              with:
                  buildkitd-flags: --debug

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Update version
              if: "github.event_name == 'release' && github.event.action == 'published' || startsWith(github.ref, 'refs/tags/')"
              env:
                  REF: ${{ github.event.release.tag_name || steps.tag_check.outputs.current_tag }}
              run: |
                  sed -i "s/ 'version' => 'canary',/ 'version' => '${REF:1}',/" config/app.php
                  npm version --no-git-tag-version ${REF:1}

            - name: Build and Push (feature branches)
              if: ${{ startsWith(github.ref, 'refs/heads/feature/') || github.ref == 'refs/heads/dev' }}
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  platforms: linux/amd64
                  labels: ${{ steps.docker_meta.outputs.labels }}
                  tags: ${{ steps.docker_meta.outputs.tags }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1

            - name: Build and Push (production)
              if: ${{ startsWith(github.ref, 'refs/heads/release/') || github.ref == 'refs/heads/main' || github.event_name == 'release' || startsWith(github.ref, 'refs/tags/') }}
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  labels: ${{ steps.docker_meta.outputs.labels }}
                  tags: ${{ steps.docker_meta.outputs.tags }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1
